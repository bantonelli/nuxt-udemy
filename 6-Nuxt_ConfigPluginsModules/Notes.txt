-------------------
MODULE INTRODUCTION
-------------------
- Sometimes you want to add functionality to the default 
  Nuxt framework. 
- You can change a lot of the behavior through the config 
  file. 
- You can add behavior through plugins. 


-------------------
THE NUXT CONFIG FILE -> nuxt.config.js  
-------------------
- Settings play a role in: 
    - Content of the page 
    - Build settings 
    - Optimizations 
    - etc. 

- The default file comes with some settings 
    - But there are plenty more on the Nuxt website/API reference. 

SETTINGS: 
    - mode:  
        - 'universal' -> Take advantage of Nuxt SSR
        - 'spa' -> No SSR 
    - head: {}
        - Whatever goes into this object is added to every single page's <head> in HTML. 
        - If you want to add specific head tags to a particular   page, you can do so just: 
            1) add the "head" property to the page.vue where 
            you want the special tags. 
            2) this would be just another Nuxt property which 
            is automatically injected into the Vue instance of 
            PAGES ONLY. 
        
    


-------------------
THE LOADING PROPERTY 
-------------------
config.loading: 
- The property in the config which controls the loading indicator (generated at the top of the screen by Nuxt).
    - PROPERTIES: 
        - color, height, duration

config.loadingIndicator: 
- Property controls the loading indicator for SPA mode. 
- The duration of this indicator is determined by the client 
  loading XHR data. 
    - PROPERTIES: 
        - name (shape of indicator), color



-------------------
WORKING WITH ENVIRONMENT VARIABLES 
-------------------
config.css: []
- Property is an array of .css files
- Files included are loaded globally (EVERY PAGE) 

config.build: { extend(config, ctx) {}}
- This property is where you can add steps to the build process probably 
  via 3rd party packages/plugins 
- You can extend the webpack config in the extend() method 

env: {<properties>}
- This property represents the process.env object 
- You can add your own environment variables by defining properties 
  in this object. 
EXAMPLE: 
    // declares process.env.baseUrl which is callable within Nuxt components/pages. 
    // Assigns it the value of either host-provided URL (env.BASE_URL)
    // or a hard-coded string URL.
    env {
        baseUrl: process.env.BASE_URL || 'https://nuxt-blog.firebaseio.com'
    }



-------------------
HOW TO GET THE MOST OUT OF THIS COURSE 
-------------------


-------------------
WHERE TO FIND SOURCE CODE 
-------------------