-------------------
MODULE INTRODUCTION
-------------------
- Sometimes you want to add functionality to the default 
  Nuxt framework. 
- You can change a lot of the behavior through the config 
  file. 
- You can add behavior through plugins. 


-------------------
THE NUXT CONFIG FILE -> nuxt.config.js  
-------------------
- Settings play a role in: 
    - Content of the page 
    - Build settings 
    - Optimizations 
    - etc. 

- The default file comes with some settings 
    - But there are plenty more on the Nuxt website/API reference. 

SETTINGS: 
    - mode:  
        - 'universal' -> Take advantage of Nuxt SSR
        - 'spa' -> No SSR 
    - head: {}
        - Whatever goes into this object is added to every single page's <head> in HTML. 
        - If you want to add specific head tags to a particular   page, you can do so just: 
            1) add the "head" property to the page.vue where 
            you want the special tags. 
            2) this would be just another Nuxt property which 
            is automatically injected into the Vue instance of 
            PAGES ONLY. 
    


-------------------
MANIPULATING ROUTING SETTINGS  
-------------------
config.generate 
- Property that changes the way Nuxt statically generates pages 
- Have to work with this when deploying 

config.rootDir
- Property that is used to set the root directory of the project
- All your Nuxt files as well as node_modules have to be contained within 
  this directory for it to work. 
- default is '/' 

config.router 
- allows you to override some settings of the Nuxt router 
- You can set ANY of the base vue-router settings here as well since 
  Nuxt is using that behind the scenes. 
    - This is basically the vue-router route config with added Nuxt features
    - You can mess with: linkActiveClass, scrollBehavior, etc. 
- EXAMPLE: 
    /*
        base 
            - This property is used to set the baseUrl upon which 
              your app's pages are served. 
        extendRoutes(routes, resolve)
            - Nuxt already supplies routes for you based on the directory 
              structure of the project 
            - This function allows you to add custom routes to the 
              routes already supplied by Nuxt. 
            - the <routes> param is the routes provided by Nuxt. 
                - You can push normal vue-router route objects onto this 
                  array. 
    */
    router: {
        base: '/my-app/',
        extendRoutes(routes, resolve) {
            routes.push({
                path: '*', 
                component: resolve(__dirname + 'pages/index.vue')'
            });
        }
    }